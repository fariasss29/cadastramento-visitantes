import React from 'react'
import { Box, Paper, IconButton } from '@mui/material'
import { DataGrid, GridToolbar } from '@mui/x-data-grid'
import { useQuery } from 'react-query'
import axios from '@/services/axios'
import BackdropLoading from '@/components/BackdropLoading'
import Error from '@/components/Error'
import { BiEditAlt } from "react-icons/bi";

export default function PessoasCadastradas() {
  const { isLoading, error, data } = useQuery('pessoas', () =>
    axios.get('/visitantes/visitantes/consulta_todas_pessoas/').then(r => r.data)
  )
  if (isLoading) return <BackdropLoading />
  if (error) return <Error error={error.response?.data} />
  console.log('resp API >>', data)
  const columns = [


    {
      field: 'acoes',
      headerName: 'Ações',
      width: 120,
      sortable: false,
      filterable: false,
      align: 'center',
      headerAlign: 'center',
      renderCell: ({ row }) => (
        <IconButton color="primary" align='center' size="small" onClick={() => console.log('Ver:', row.uuid)}>
          <BiEditAlt size={24} />
        </IconButton>
        // <Button variant="contained" size="small" onClick={() => console.log('Ver:', row.uuid)}>
        //   Mudar
        // </Button>
      )
    },
    { field: 'nome_completo', headerName: 'Visitante', width: 200, align: 'center', headerAlign: 'center' },
    { field: 'razao_social', headerName: 'Empresa', width: 200, align: 'center', headerAlign: 'center' },
    {
      field: 'data_nascimento',
      headerName: 'Nascimento',
      width: 120,
      align: 'center',
      headerAlign: 'center',
      renderCell: ({ value }) => {
        // console.log('raw data_nascimento cell:', value)
        if (!value) return ''
        const dt = new Date(value)
        if (isNaN(dt)) return ''
        return dt.toLocaleDateString('pt-BR')
      }
    },
    { field: 'cpf', headerName: 'CPF', width: 140, align: 'center', headerAlign: 'center' },
    { field: 'genero', headerName: 'Gênero', width: 100, align: 'center', headerAlign: 'center' },
    { field: 'celular', headerName: 'Celular', width: 140, align: 'center', headerAlign: 'center' },
    { field: 'email', headerName: 'Email', width: 200, align: 'center', headerAlign: 'center' },
  ]

  return (
    <Box sx={{ width: '100%' }}>
      <Paper elevation={3} sx={{ height: 800, borderRadius: 2, overflow: 'hidden' }}>
        <DataGrid
          rows={data || []}
          columns={columns}
          getRowId={row => row.uuid}
          initialState={{ pagination: { paginationModel: { pageSize: 13 } } }}
          pageSizeOptions={[5]}
          slots={{ toolbar: GridToolbar }}
          slotProps={{
            toolbar: {
              showQuickFilter: true,
              quickFilterProps: { debounceMs: 300 }
            }
          }}
          sx={{
            '.MuiDataGrid-columnHeaders': { backgroundColor: '#FFCCCC', color: '#333' },
            '.MuiDataGrid-row:hover': { backgroundColor: '#f5f5f5' },
            '.MuiDataGrid-cell': { borderBottom: '1px solid #ddd' },
            '.MuiDataGrid-footerContainer': { backgroundColor: '#f7f7f7' },
            '& .MuiCheckbox-root': { color: '#1976d2' },
          }}
        />
      </Paper>
    </Box>
  )
}
